import numpy as np

# 특별한 형태의 배열 생성
# 모든 원소가 0인 배열
a1 = np.zeros(10)
print(a1)  # [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
a2 = np.zeros((2, 3))
print(a2)
# [[0. 0. 0.]
#  [0. 0. 0.]]
print(a2.dtype)  # float64 실수형 타입이 default로 설정되어 있음
# 타입을 바꿔서 만들기
a3 = np.zeros((2, 3), dtype = int)
print(a3)
# [[0 0 0]
#  [0 0 0]]
print(a3.dtype)  # int32

# 모든 원소가 1인 배열
a4 = np.ones((2, 3), dtype = int)
print(a4)
# [[1 1 1]
#  [1 1 1]]

# 단위행렬 생성
a5 = np.eye(5, dtype = int)
print(a5)
# [[1 0 0 0 0]
#  [0 1 0 0 0]
#  [0 0 1 0 0]
#  [0 0 0 1 0]
#  [0 0 0 0 1]]
a6 = np.eye(5, k = 2)  # k 속성을 넣어주면 넣어준 값만큼 이동함
print(a6)
# [[0. 0. 1. 0. 0.]
#  [0. 0. 0. 1. 0.]
#  [0. 0. 0. 0. 1.]
#  [0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0.]]

# 난수 배열 생성
a7 = np.random.rand(2, 3)  # 0에서 1미만의 랜덤한 실수를 원소로 배열 생성
print(a7)
# [[0.71792343 0.77414569 0.732501  ]
#  [0.75324513 0.59950473 0.95128079]]
a8 = np.random.randint(0, 10, (3, 4))  # 0에서 10미만의 랜덤한 정수를 원소로 배열 생성
print(a8)
# [[8 6 7 9]
#  [4 4 1 0]
#  [2 7 1 5]]
